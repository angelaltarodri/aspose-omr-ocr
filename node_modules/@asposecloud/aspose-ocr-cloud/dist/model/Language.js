"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Aspose OCR Cloud 5.0 API
 * Aspose OCR Cloud 5.0 API
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
* Enum class Language.
* @enum {}
* @readonly
*/
var Language = exports["default"] = /*#__PURE__*/function () {
  function Language() {
    _classCallCheck(this, Language);
    /**
     * value: "English"
     * @const
     */
    _defineProperty(this, "English", "English");
    /**
     * value: "German"
     * @const
     */
    _defineProperty(this, "German", "German");
    /**
     * value: "French"
     * @const
     */
    _defineProperty(this, "French", "French");
    /**
     * value: "Italian"
     * @const
     */
    _defineProperty(this, "Italian", "Italian");
    /**
     * value: "Spanish"
     * @const
     */
    _defineProperty(this, "Spanish", "Spanish");
    /**
     * value: "Portuguese"
     * @const
     */
    _defineProperty(this, "Portuguese", "Portuguese");
    /**
     * value: "Polish"
     * @const
     */
    _defineProperty(this, "Polish", "Polish");
    /**
     * value: "Slovene"
     * @const
     */
    _defineProperty(this, "Slovene", "Slovene");
    /**
     * value: "Slovak"
     * @const
     */
    _defineProperty(this, "Slovak", "Slovak");
    /**
     * value: "Netherlands"
     * @const
     */
    _defineProperty(this, "Netherlands", "Netherlands");
    /**
     * value: "Lithuanian"
     * @const
     */
    _defineProperty(this, "Lithuanian", "Lithuanian");
    /**
     * value: "Latvian"
     * @const
     */
    _defineProperty(this, "Latvian", "Latvian");
    /**
     * value: "Danish"
     * @const
     */
    _defineProperty(this, "Danish", "Danish");
    /**
     * value: "Norwegian"
     * @const
     */
    _defineProperty(this, "Norwegian", "Norwegian");
    /**
     * value: "Finnish"
     * @const
     */
    _defineProperty(this, "Finnish", "Finnish");
    /**
     * value: "Serbian"
     * @const
     */
    _defineProperty(this, "Serbian", "Serbian");
    /**
     * value: "Croatian"
     * @const
     */
    _defineProperty(this, "Croatian", "Croatian");
    /**
     * value: "Czech"
     * @const
     */
    _defineProperty(this, "Czech", "Czech");
    /**
     * value: "Swedish"
     * @const
     */
    _defineProperty(this, "Swedish", "Swedish");
    /**
     * value: "Estonian"
     * @const
     */
    _defineProperty(this, "Estonian", "Estonian");
    /**
     * value: "Romanian"
     * @const
     */
    _defineProperty(this, "Romanian", "Romanian");
    /**
     * value: "Chinese"
     * @const
     */
    _defineProperty(this, "Chinese", "Chinese");
    /**
     * value: "Russian"
     * @const
     */
    _defineProperty(this, "Russian", "Russian");
    /**
     * value: "Arabic"
     * @const
     */
    _defineProperty(this, "Arabic", "Arabic");
    /**
     * value: "Hindi"
     * @const
     */
    _defineProperty(this, "Hindi", "Hindi");
    /**
     * value: "Ukrainan"
     * @const
     */
    _defineProperty(this, "Ukrainan", "Ukrainan");
    /**
     * value: "Bengali"
     * @const
     */
    _defineProperty(this, "Bengali", "Bengali");
    /**
     * value: "Tibetan"
     * @const
     */
    _defineProperty(this, "Tibetan", "Tibetan");
    /**
     * value: "Thai"
     * @const
     */
    _defineProperty(this, "Thai", "Thai");
    /**
     * value: "Urdu"
     * @const
     */
    _defineProperty(this, "Urdu", "Urdu");
    /**
     * value: "Turkish"
     * @const
     */
    _defineProperty(this, "Turkish", "Turkish");
    /**
     * value: "Korean"
     * @const
     */
    _defineProperty(this, "Korean", "Korean");
    /**
     * value: "Indonesian"
     * @const
     */
    _defineProperty(this, "Indonesian", "Indonesian");
    /**
     * value: "Hebrew"
     * @const
     */
    _defineProperty(this, "Hebrew", "Hebrew");
    /**
     * value: "Javanese"
     * @const
     */
    _defineProperty(this, "Javanese", "Javanese");
    /**
     * value: "Greek"
     * @const
     */
    _defineProperty(this, "Greek", "Greek");
    /**
     * value: "Japanese"
     * @const
     */
    _defineProperty(this, "Japanese", "Japanese");
    /**
     * value: "Persian"
     * @const
     */
    _defineProperty(this, "Persian", "Persian");
    /**
     * value: "Albanian"
     * @const
     */
    _defineProperty(this, "Albanian", "Albanian");
    /**
     * value: "Latin"
     * @const
     */
    _defineProperty(this, "Latin", "Latin");
    /**
     * value: "Vietnamese"
     * @const
     */
    _defineProperty(this, "Vietnamese", "Vietnamese");
    /**
     * value: "Uzbek"
     * @const
     */
    _defineProperty(this, "Uzbek", "Uzbek");
    /**
     * value: "Georgian"
     * @const
     */
    _defineProperty(this, "Georgian", "Georgian");
    /**
     * value: "Bulgarian"
     * @const
     */
    _defineProperty(this, "Bulgarian", "Bulgarian");
    /**
     * value: "Azerbaijani"
     * @const
     */
    _defineProperty(this, "Azerbaijani", "Azerbaijani");
    /**
     * value: "Kazah"
     * @const
     */
    _defineProperty(this, "Kazah", "Kazah");
    /**
     * value: "Macedonian"
     * @const
     */
    _defineProperty(this, "Macedonian", "Macedonian");
    /**
     * value: "Belorussian"
     * @const
     */
    _defineProperty(this, "Belorussian", "Belorussian");
    /**
     * value: "HWT_eng"
     * @const
     */
    _defineProperty(this, "HWT_eng", "HWT_eng");
  }
  _createClass(Language, null, [{
    key: "constructFromObject",
    value:
    /**
    * Returns a <code>Language</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/Language} The enum <code>Language</code> value.
    */
    function constructFromObject(object) {
      return object;
    }
  }]);
  return Language;
}();