/**
 * Aspose OCR Cloud 5.0 API
 * Aspose OCR Cloud 5.0 API
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OCRError from './OCRError';
import OCRResult from './OCRResult';
import OCRTaskStatus from './OCRTaskStatus';
import ResponseStatusCode from './ResponseStatusCode';

/**
 * The OCRResponse model module.
 * @module model/OCRResponse
 * @version 5.0
 */
class OCRResponse {
    /**
     * Constructs a new <code>OCRResponse</code>.
     * Response with Recognition result for specific task ID
     * @alias module:model/OCRResponse
     */
    constructor() { 
        
        OCRResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OCRResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OCRResponse} obj Optional instance to populate.
     * @return {module:model/OCRResponse} The populated <code>OCRResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OCRResponse();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('responseStatusCode')) {
                obj['responseStatusCode'] = ResponseStatusCode.constructFromObject(data['responseStatusCode']);
            }
            if (data.hasOwnProperty('taskStatus')) {
                obj['taskStatus'] = OCRTaskStatus.constructFromObject(data['taskStatus']);
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [OCRResult]);
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = OCRError.constructFromObject(data['error']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OCRResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OCRResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['results'])) {
                throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
            }
            // validate the optional field `results` (array)
            for (const item of data['results']) {
                OCRResult.validateJSON(item);
            };
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          OCRError.validateJSON(data['error']);
        }

        return true;
    }


}



/**
 * The specific Task ID that result was made for
 * @member {String} id
 */
OCRResponse.prototype['id'] = undefined;

/**
 * @member {module:model/ResponseStatusCode} responseStatusCode
 */
OCRResponse.prototype['responseStatusCode'] = undefined;

/**
 * @member {module:model/OCRTaskStatus} taskStatus
 */
OCRResponse.prototype['taskStatus'] = undefined;

/**
 * List of results - Especially Text or PDF files
 * @member {Array.<module:model/OCRResult>} results
 */
OCRResponse.prototype['results'] = undefined;

/**
 * @member {module:model/OCRError} error
 */
OCRResponse.prototype['error'] = undefined;






export default OCRResponse;

