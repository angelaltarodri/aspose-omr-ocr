/**
 * Aspose OCR Cloud 5.0 API
 * Aspose OCR Cloud 5.0 API
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OCRRect from './OCRRect';

/**
 * The OCRRegion model module.
 * @module model/OCRRegion
 * @version 5.0
 */
class OCRRegion {
    /**
     * Constructs a new <code>OCRRegion</code>.
     * Represents information about strict regions to recognize text
     * @alias module:model/OCRRegion
     */
    constructor() { 
        
        OCRRegion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OCRRegion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OCRRegion} obj Optional instance to populate.
     * @return {module:model/OCRRegion} The populated <code>OCRRegion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OCRRegion();

            if (data.hasOwnProperty('rect')) {
                obj['rect'] = OCRRect.constructFromObject(data['rect']);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OCRRegion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OCRRegion</code>.
     */
    static validateJSON(data) {
        // validate the optional field `rect`
        if (data['rect']) { // data not null
          OCRRect.validateJSON(data['rect']);
        }

        return true;
    }


}



/**
 * @member {module:model/OCRRect} rect
 */
OCRRegion.prototype['rect'] = undefined;

/**
 * The serial number of the region for the formation of the text
 * @member {Number} order
 */
OCRRegion.prototype['order'] = undefined;






export default OCRRegion;

