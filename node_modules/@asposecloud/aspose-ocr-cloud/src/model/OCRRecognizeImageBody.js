/**
 * Aspose OCR Cloud 5.0 API
 * Aspose OCR Cloud 5.0 API
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OCRSettingsRecognizeImage from './OCRSettingsRecognizeImage';

/**
 * The OCRRecognizeImageBody model module.
 * @module model/OCRRecognizeImageBody
 * @version 5.0
 */
class OCRRecognizeImageBody {
    /**
     * Constructs a new <code>OCRRecognizeImageBody</code>.
     * Combines Image data and OCR Recognition settings
     * @alias module:model/OCRRecognizeImageBody
     * @param image {Blob} Gets or Sets Image
     * @param settings {module:model/OCRSettingsRecognizeImage} 
     */
    constructor(image, settings) { 
        
        OCRRecognizeImageBody.initialize(this, image, settings);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, image, settings) { 
        obj['image'] = image;
        obj['settings'] = settings;
    }

    /**
     * Constructs a <code>OCRRecognizeImageBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OCRRecognizeImageBody} obj Optional instance to populate.
     * @return {module:model/OCRRecognizeImageBody} The populated <code>OCRRecognizeImageBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OCRRecognizeImageBody();

            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], 'Blob');
            }
            if (data.hasOwnProperty('settings')) {
                obj['settings'] = OCRSettingsRecognizeImage.constructFromObject(data['settings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OCRRecognizeImageBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OCRRecognizeImageBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OCRRecognizeImageBody.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `settings`
        if (data['settings']) { // data not null
          OCRSettingsRecognizeImage.validateJSON(data['settings']);
        }

        return true;
    }


}

OCRRecognizeImageBody.RequiredProperties = ["image", "settings"];

/**
 * Gets or Sets Image
 * @member {Blob} image
 */
OCRRecognizeImageBody.prototype['image'] = undefined;

/**
 * @member {module:model/OCRSettingsRecognizeImage} settings
 */
OCRRecognizeImageBody.prototype['settings'] = undefined;






export default OCRRecognizeImageBody;

